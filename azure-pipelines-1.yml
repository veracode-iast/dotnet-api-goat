# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-2019'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  AGENT_SERVER_URL: 'https://localhost:10010/iast/as/v1'

resources:
  containers:
  - container: 'iast_agent_server'
    image: 'veracode/iast-agent-server:windows-latest'
    ports:
    - 10010:10010
    options: -e VERACODE_API_KEY_ID=$(api_key_id) -e VERACODE_API_KEY_SECRET=$(api_key_secret)
services:
  iast_agent_server: iast_agent_server
  

steps: 
- bash: |
    echo "Waiting for Agent Server to start"
    sleep 30
    DEBUG=1 curl -k -L $(AGENT_SERVER_URL)
    sleep 5
    echo "Downloading agents..."
    curl -A PowerShell -k $(AGENT_SERVER_URL)/downloads -o ./iast-ci.ps1 
    powershell ./iast-ci.ps1
    ls -la
  displayName: Run Agent Server
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- bash: |
    echo "setting COR profiler and running tests"
    export COR_ENABLE_PROFILING=1
    export COR_PROFILER={90747D54-A553-4353-8E39-CA9ADE930151}
    export COR_PROFILER_PATH=agent_dotnet_win32.dll
  displayName: Agent Setup for DotNet

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- bash: |
    echo "Checking Results"
    curl -k $(AGENT_SERVER_URL)/events?session_id=last > flaws.txt
    cat flaws.txt
  displayName: Display Flaws
